function HA = ex1_node(~)


%% Generated on 08-Jun-2022

%-------Automaton created from Component 'automata_learning_sys'-----------

%% Interface Specification:
%   This section clarifies the meaning of state, input & output dimensions
%   by showing their mapping to SpaceEx variable names. 

% Component 1 (automata_learning_sys):
%  state x := [x1; x2; x3]
%  input u := [uDummy]

%--------------------Component automata_learning_sys-----------------------

%------------------------------State loc1----------------------------------

%% equation:
%   x1' == 3.117145091360726 - 6.236726331582759 * x2 - 0.06048766661353966 * x3 - 7.16491395077901 * x1 &
%    x2' == 5.6789874840469565 * x1 + 4.015041317165014 * x2 + 1.472908217470831 * x3 - 5.369614987808745 &
%    x3' == 2.8918727170093916 * x1 + 2.047286249115132 * x2 - 2.2942002437339397 * x3 + 0.3685019598733561
dynA = ...
[-7.1649139507790096104145050048828,-6.2367263315827585756778717041016,...
-0.060487666613539659010712057352066;5.6789874840469565242528915405273,...
4.0150413171650143340229988098145,1.472908217470831004902720451355;...
2.8918727170093916356563568115234,2.0472862491151317954063415527344,...
-2.2942002437339397147297859191895];
dynB = ...
[0;0;0];
dync = ...
[3.1171450913607259280979633331299;-5.3696149878087453544139862060547;...
0.36850195987335609970614314079285];
dynamics = linearSys(dynA, dynB, dync);

%% equation:
%   
A = ...
zeros([0,0]);
b = ...
zeros([0,1]);
polyOpt = struct('A', A, 'b', b);
inv = mptPolytope(polyOpt);

trans = {};
%% equation:
%   no reset equation given
resetA = ...
[1,0,0;0,1,0;0,0,1];
resetc = ...
[0;0;0];
reset = struct('A', resetA, 'c', resetc,'hasInput',0);

%% equation:
%   3.613 * x1 + 3.088 * x2 - 2.026 * x3 + 1.0 > 0.0
A = ...
[-3.6129999999999999893418589635985,-3.088000000000000078159700933611,...
2.0259999999999998010480339871719];
b = ...
[1];
polyOpt = struct('A', A, 'b', b);
guard = mptPolytope(polyOpt);

trans{1} = transition(guard, reset, 2,[]);

loc{1} = location('S1', inv, trans, dynamics);



%------------------------------State loc2----------------------------------

%% equation:
%   x1' == 0.3781958949784894 * x1 + 0.5667232912255713 * x2 + 1.1820176425426325 * x3 + 0.04975323615462912 &
%    x2' == 1.0199052188399946 * x1 - 0.8502210061997175 * x2 + 0.48139552073553205 * x3 + 0.06099497224931838 &
%    x3' == 0.6268806836960721 * x2 - 1.3935050202198909 * x1 - 1.3442249700638058 * x3 - 0.1265419602464135
dynA = ...
[0.37819589497848937753587961196899,0.56672329122557130176573991775513,...
1.1820176425426325295120477676392;1.0199052188399946317076683044434,...
-0.85022100619971752166748046875,0.4813955207355320453643798828125;...
-1.3935050202198908664286136627197,0.62688068369607208296656608581543,...
-1.3442249700638058129698038101196];
dynB = ...
[0;0;0];
dync = ...
[0.049753236154629121301695704460144;0.06099497224931837990880012512207;...
-0.12654196024641350959427654743195];
dynamics = linearSys(dynA, dynB, dync);

%% equation:
%   
A = ...
zeros([0,0]);
b = ...
zeros([0,1]);
polyOpt = struct('A', A, 'b', b);
inv = mptPolytope(polyOpt);

trans = {};
loc{2} = location('S2', inv, trans, dynamics);



HA = hybridAutomaton(loc);


end